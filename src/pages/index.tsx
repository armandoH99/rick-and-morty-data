import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useEffect, useState } from "react";
import Link from "next/link";
import { Character, PageState, Props } from "@/types/types";

const inter = Inter({ subsets: ["latin"] });

const defaultEndpoint = "https://rickandmortyapi.com/api/character/";

export async function getServerSideProps(): Promise<{ props: Props }> {
  const res = await fetch(defaultEndpoint);
  const data = await res.json();
  return {
    props: {
      data,
    },
  };
}

export default function Home({ data }: Props) {
  const { info, results: defaultResults = [] } = data;
  const [results, setResults] = useState<Character[]>(defaultResults);
  const [page, setPage] = useState<PageState>({
    ...info,
    current: defaultEndpoint,
  });

  const { current } = page;

  useEffect(() => {
    if (current === defaultEndpoint) return;
    async function request() {
      const res = await fetch(current);
      const nextData = await res.json();

      setPage({
        current,
        ...nextData.info,
      });

      if (!nextData.info?.prev) {
        setResults(nextData.results);
        return;
      }
      setResults((prev) => {
        return [...prev, ...nextData.results];
      });
    }
    request();
  }, [current]);

  function handleLoadMore() {
    setPage((prev: PageState) => {
      return {
        ...prev,
        current: page?.next!,
      };
    });
  }
  function handleOnSubmitSearch(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault();
    const { currentTarget } = e;
    const fields = Array.from(currentTarget?.elements);
    const fieldQuery = fields.find((field) => (field as HTMLInputElement).name === "query") as HTMLInputElement;
    const value = fieldQuery?.value || "";
    const endpoint = `https://rickandmortyapi.com/api/character/?name=${value}`;

    setPage({
      current: endpoint,
      count: 0,
      pages: 0,
      next: null,
      prev: null,
    });
  }

  return (
    <>
      <Head>
        <title>My rick and morty data</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1>“IF I DIE IN A CAGE, I LOSE A BET.”</h1>
        <br/>
        {/* <div className={styles.description}>
          <p>Rick and morty</p>
        </div> */}
        <form className="search" onSubmit={handleOnSubmitSearch}>
          <input name="query" type="search" />
          <button>Search</button>
        </form>

        <ul className={styles.grid}>
          {results.map((result) => {
            const { id, name, image } = result;
            return (
              <li className={styles.card} key="id">
                <Link href={"/character/[id]"} as={`/character/${id}`}>
                  <img src={image} width={200} alt={`${name} thumb`} />
                  <h3>{name}</h3>
                </Link>
              </li>
            );
          })}
        </ul>
        <p>
          <button onClick={handleLoadMore}>Load More</button>
        </p>
      </main>
    </>
  );
}
